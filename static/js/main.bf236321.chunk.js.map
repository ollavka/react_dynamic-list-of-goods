{"version":3,"sources":["components/GoodsList/GoodsList.tsx","enums/ButtonsEnum.ts","components/Buttons/Buttons.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["ButtonsEnum","GoodsList","memo","goods","className","style","marginTop","map","good","id","color","name","prevProps","currProps","prevGoods","currGoods","length","i","prevGood","currGood","Object","keys","key","areGoodsEqual","Buttons","props","getAllGoods","getFirstFiveGoods","getRedGoods","isLoading","useState","selectedButton","setSelectedButton","handleLoadGoods","useCallback","callback","currButton","gap","classNames","LoadAllGoods","type","onClick","disabled","Load5FirstGoods","LoadRedGoods","getAll","fetch","then","response","ok","Error","status","statusText","json","data","delay","Promise","resolve","setTimeout","wait","catch","error","get5First","sort","good1","good2","localeCompare","slice","getRed","filter","App","setGoods","setIsLoading","getGoodsFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bf236321.chunk.js","sourcesContent":["import { FC, memo } from 'react';\nimport { Good } from '../../types/Good';\n\nfunction areGoodsEqual(prevGoods: Good[], currGoods: Good[]): boolean {\n  if (prevGoods.length !== currGoods.length) {\n    return false;\n  }\n\n  // eslint-disable-next-line no-plusplus\n  for (let i = 0; i < prevGoods.length; i++) {\n    const prevGood = prevGoods[i];\n    const currGood = currGoods[i];\n\n    const goodKeys = Object.keys(prevGood);\n\n    // eslint-disable-next-line no-restricted-syntax\n    for (const key of goodKeys) {\n      if (prevGood[key] !== currGood[key]) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: FC<Props> = memo(({ goods }) => (\n  <table\n    className=\"table is-striped is-bordered is-hoverable is-fullwidth\"\n    style={{ marginTop: 20 }}\n  >\n    <thead>\n      <tr>\n        <th>ID</th>\n        <th>Title</th>\n        <th>Color</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {goods.map((good) => (\n        <tr key={good.id}>\n          <td>{good.id}</td>\n          <td\n            data-cy=\"good\"\n            style={{ color: good.color }}\n          >\n            {good.name}\n          </td>\n          <td>{good.color}</td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n), (prevProps, currProps) => {\n  return areGoodsEqual(prevProps.goods, currProps.goods);\n});\n","export enum ButtonsEnum {\n  LoadAllGoods = 'Load all goods',\n  Load5FirstGoods = 'Load 5 first goods',\n  LoadRedGoods = 'Load red goods',\n}\n","import {\n  FC, useState, memo, useCallback,\n} from 'react';\nimport classNames from 'classnames';\nimport { ButtonsEnum } from '../../enums/ButtonsEnum';\n\ntype Props = {\n  getAllGoods: () => void;\n  getFirstFiveGoods: () => void;\n  getRedGoods: () => void;\n  isLoading: boolean;\n};\n\nexport const Buttons: FC<Props> = memo((props) => {\n  const {\n    getAllGoods,\n    getFirstFiveGoods,\n    getRedGoods,\n    isLoading,\n  } = props;\n\n  // eslint-disable-next-line max-len\n  const [selectedButton, setSelectedButton] = useState<ButtonsEnum | null>(null);\n\n  const handleLoadGoods = useCallback((\n    callback: () => void,\n    currButton: ButtonsEnum,\n  ) => {\n    callback();\n    setSelectedButton(currButton);\n  }, []);\n\n  return (\n    <div className=\"is-flex is-justify-content-center\" style={{ gap: 30 }}>\n      <button\n        className={classNames('button is-link', {\n          'is-loading': isLoading\n            && selectedButton === ButtonsEnum.LoadAllGoods,\n        })}\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={() => handleLoadGoods(getAllGoods, ButtonsEnum.LoadAllGoods)}\n        disabled={isLoading}\n      >\n        {ButtonsEnum.LoadAllGoods}\n      </button>\n\n      <button\n        className={classNames('button is-warning', {\n          'is-loading': isLoading\n            && selectedButton === ButtonsEnum.Load5FirstGoods,\n        })}\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={() => handleLoadGoods(\n          getFirstFiveGoods,\n          ButtonsEnum.Load5FirstGoods,\n        )}\n        disabled={isLoading}\n      >\n        {ButtonsEnum.Load5FirstGoods}\n      </button>\n\n      <button\n        className={classNames('button is-danger', {\n          'is-loading': isLoading\n            && selectedButton === ButtonsEnum.LoadRedGoods,\n        })}\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={() => handleLoadGoods(getRedGoods, ButtonsEnum.LoadRedGoods)}\n        disabled={isLoading}\n      >\n        {ButtonsEnum.LoadRedGoods}\n      </button>\n    </div>\n  );\n}, (prevProps, currProps) => {\n  const { isLoading: prevLoader } = prevProps;\n  const { isLoading: currLoader } = currProps;\n\n  return prevLoader === currLoader;\n});\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nconst wait = (data: Good[], delay: number): Promise<Good[]> => {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(data);\n    }, delay);\n  });\n};\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(\n          `${response.status} - ${response.statusText}`,\n        );\n      }\n\n      return response.json();\n    })\n    .then(data => wait(data, 1000))\n    .catch(error => {\n      throw new Error(error);\n    });\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => (\n      goods\n        .sort((good1, good2) => good1.name.localeCompare(good2.name))\n        .slice(0, 5)\n    ));\n};\n\nexport const getRed = () => {\n  return getAll()\n    .then(goods => (\n      goods.filter(good => good.color === 'red')\n    ));\n};\n","import { FC, useState, useCallback } from 'react';\nimport { Good } from './types/Good';\nimport { GoodsList } from './components/GoodsList/GoodsList';\nimport { Buttons } from './components/Buttons';\nimport { getAll, get5First, getRed } from './api/goods';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const App: FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const getGoodsFromServer = (callback: () => Promise<Good[]>) => {\n    setIsLoading(true);\n\n    callback()\n      .then(data => {\n        setGoods(data);\n        setIsLoading(false);\n      })\n      .catch(error => {\n        throw new Error(error);\n      });\n  };\n\n  const getAllGoods = useCallback(() => {\n    getGoodsFromServer(getAll);\n  }, []);\n\n  const getFirstFiveGoods = useCallback(() => {\n    getGoodsFromServer(get5First);\n  }, []);\n\n  const getRedGoods = useCallback(() => {\n    getGoodsFromServer(getRed);\n  }, []);\n\n  return (\n    <div className=\"App container box\">\n      <h1 className=\"title has-text-centered\">Dynamic list of Goods</h1>\n\n      <Buttons\n        getAllGoods={getAllGoods}\n        getFirstFiveGoods={getFirstFiveGoods}\n        getRedGoods={getRedGoods}\n        isLoading={isLoading}\n      />\n\n      {goods.length > 0 && (\n        <GoodsList goods={goods} />\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}