{"version":3,"sources":["enums/ButtonsEnum.ts","components/GoodsList/GoodsList.tsx","components/Buttons/Buttons.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["ButtonsEnum","GoodsList","goods","className","style","marginTop","map","good","id","color","name","Buttons","props","getAllGoods","getFirstFiveGoods","getRedGoods","isLoading","useState","selectedButton","setSelectedButton","handleLoadGoods","callback","currButton","gap","classNames","LoadAllGoods","type","onClick","disabled","Load5FirstGoods","LoadRedGoods","getAll","fetch","then","response","json","data","delay","Promise","resolve","setTimeout","wait","get5First","sort","good1","good2","localeCompare","slice","getRed","filter","App","setGoods","setIsLoading","getGoodsFromServer","length","ReactDOM","render","document","getElementById"],"mappings":"iLAAYA,E,qCCOCC,EAAuB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAClC,wBACEC,UAAU,yDACVC,MAAO,CAAEC,UAAW,IAFtB,UAIE,gCACE,+BACE,oCACA,uCACA,4CAIJ,gCACGH,EAAMI,KAAI,SAACC,GAAD,OACT,+BACE,6BAAKA,EAAKC,KACV,oBACE,UAAQ,OACRJ,MAAO,CAAEK,MAAOF,EAAKE,OAFvB,SAIGF,EAAKG,OAER,6BAAKH,EAAKE,UARHF,EAAKC,a,0BDtBVR,K,8BAAAA,E,qCAAAA,E,+BAAAA,M,KEWL,IAAMW,EAAqB,SAACC,GACjC,IACEC,EAIED,EAJFC,YACAC,EAGEF,EAHFE,kBACAC,EAEEH,EAFFG,YACAC,EACEJ,EADFI,UAIF,EAA4CC,mBAA6B,MAAzE,mBAAOC,EAAP,KAAuBC,EAAvB,KAEMC,EAAkB,SAACC,EAAsBC,GAC7CD,IACAF,EAAkBG,IAGpB,OACE,sBAAKnB,UAAU,oCAAoCC,MAAO,CAAEmB,IAAK,IAAjE,UACE,wBACEpB,UAAWqB,IAAW,iBAAkB,CACtC,aAAcR,GACTE,IAAmBlB,EAAYyB,eAEtCC,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMP,EAAgBP,EAAab,EAAYyB,eACxDG,SAAUZ,EARZ,SAUGhB,EAAYyB,eAGf,wBACEtB,UAAWqB,IAAW,oBAAqB,CACzC,aAAcR,GACTE,IAAmBlB,EAAY6B,kBAEtCH,KAAK,SACL,UAAQ,oBACRC,QAAS,kBAAMP,EACbN,EACAd,EAAY6B,kBAEdD,SAAUZ,EAXZ,SAaGhB,EAAY6B,kBAGf,wBACE1B,UAAWqB,IAAW,mBAAoB,CACxC,aAAcR,GACTE,IAAmBlB,EAAY8B,eAEtCJ,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMP,EAAgBL,EAAaf,EAAY8B,eACxDF,SAAUZ,EARZ,SAUGhB,EAAY8B,mBCvDd,SAASC,IACd,OAAOC,MAXI,yEAYRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAXD,SAACA,EAAcC,GAC1B,OAAO,IAAIC,SAAQ,SAACC,GAClBC,YAAW,WACTD,EAAQH,KACPC,MAOWI,CAAKL,EAAM,QAGtB,IAAMM,EAAY,WACvB,OAAOX,IACJE,MAAK,SAAA/B,GAAK,OACTA,EACGyC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMlC,KAAKoC,cAAcD,EAAMnC,SACtDqC,MAAM,EAAG,OAILC,EAAS,WACpB,OAAOjB,IACJE,MAAK,SAAA/B,GAAK,OACTA,EAAM+C,QAAO,SAAA1C,GAAI,MAAmB,QAAfA,EAAKE,aCvBnByC,G,YAAU,WACrB,MAA0BjC,mBAAiB,IAA3C,mBAAOf,EAAP,KAAciD,EAAd,KACA,EAAkClC,oBAAS,GAA3C,mBAAOD,EAAP,KAAkBoC,EAAlB,KAEMC,EAAqB,SAAChC,GAC1B8B,EAAS,IACTC,GAAa,GAEb/B,IACGY,MAAK,SAAAG,GACJe,EAASf,GACTgB,GAAa,OAgBnB,OACE,sBAAKjD,UAAU,oBAAf,UACE,oBAAIA,UAAU,0BAAd,mCAEA,cAAC,EAAD,CACEU,YAjBc,WAClBwC,EAAmBtB,IAiBfjB,kBAdoB,WACxBuC,EAAmBX,IAcf3B,YAXc,WAClBsC,EAAmBL,IAWfhC,UAAWA,IAGZd,EAAMoD,OAAS,GACd,cAAC,EAAD,CAAWpD,MAAOA,SC5C1BqD,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9a457b9f.chunk.js","sourcesContent":["export enum ButtonsEnum {\n  LoadAllGoods = 'Load all goods',\n  Load5FirstGoods = 'Load 5 first goods',\n  LoadRedGoods = 'Load red goods',\n}\n","import { FC } from 'react';\nimport { Good } from '../../types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: FC<Props> = ({ goods }) => (\n  <table\n    className=\"table is-striped is-bordered is-hoverable is-fullwidth\"\n    style={{ marginTop: 20 }}\n  >\n    <thead>\n      <tr>\n        <th>ID</th>\n        <th>Title</th>\n        <th>Color</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {goods.map((good) => (\n        <tr key={good.id}>\n          <td>{good.id}</td>\n          <td\n            data-cy=\"good\"\n            style={{ color: good.color }}\n          >\n            {good.name}\n          </td>\n          <td>{good.color}</td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import { FC, useState } from 'react';\nimport classNames from 'classnames';\nimport { ButtonsEnum } from '../../enums/ButtonsEnum';\n\ntype Props = {\n  getAllGoods: () => void;\n  getFirstFiveGoods: () => void;\n  getRedGoods: () => void;\n  isLoading: boolean;\n};\n\nexport const Buttons: FC<Props> = (props) => {\n  const {\n    getAllGoods,\n    getFirstFiveGoods,\n    getRedGoods,\n    isLoading,\n  } = props;\n\n  // eslint-disable-next-line max-len\n  const [selectedButton, setSelectedButton] = useState<ButtonsEnum | null>(null);\n\n  const handleLoadGoods = (callback: () => void, currButton: ButtonsEnum) => {\n    callback();\n    setSelectedButton(currButton);\n  };\n\n  return (\n    <div className=\"is-flex is-justify-content-center\" style={{ gap: 30 }}>\n      <button\n        className={classNames('button is-link', {\n          'is-loading': isLoading\n            && selectedButton === ButtonsEnum.LoadAllGoods,\n        })}\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={() => handleLoadGoods(getAllGoods, ButtonsEnum.LoadAllGoods)}\n        disabled={isLoading}\n      >\n        {ButtonsEnum.LoadAllGoods}\n      </button>\n\n      <button\n        className={classNames('button is-warning', {\n          'is-loading': isLoading\n            && selectedButton === ButtonsEnum.Load5FirstGoods,\n        })}\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={() => handleLoadGoods(\n          getFirstFiveGoods,\n          ButtonsEnum.Load5FirstGoods,\n        )}\n        disabled={isLoading}\n      >\n        {ButtonsEnum.Load5FirstGoods}\n      </button>\n\n      <button\n        className={classNames('button is-danger', {\n          'is-loading': isLoading\n            && selectedButton === ButtonsEnum.LoadRedGoods,\n        })}\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={() => handleLoadGoods(getRedGoods, ButtonsEnum.LoadRedGoods)}\n        disabled={isLoading}\n      >\n        {ButtonsEnum.LoadRedGoods}\n      </button>\n    </div>\n  );\n};\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nconst wait = (data: Good[], delay: number): Promise<Good[]> => {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(data);\n    }, delay);\n  });\n};\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json())\n    .then(data => wait(data, 1000));\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => (\n      goods\n        .sort((good1, good2) => good1.name.localeCompare(good2.name))\n        .slice(0, 5)\n    ));\n};\n\nexport const getRed = () => {\n  return getAll()\n    .then(goods => (\n      goods.filter(good => good.color === 'red')\n    ));\n};\n","import { FC, useState } from 'react';\nimport { Good } from './types/Good';\nimport { GoodsList } from './components/GoodsList/GoodsList';\nimport { Buttons } from './components/Buttons';\nimport { getAll, get5First, getRed } from './api/goods';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const App: FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const getGoodsFromServer = (callback: () => Promise<Good[]>) => {\n    setGoods([]);\n    setIsLoading(true);\n\n    callback()\n      .then(data => {\n        setGoods(data);\n        setIsLoading(false);\n      });\n  };\n\n  const getAllGoods = () => {\n    getGoodsFromServer(getAll);\n  };\n\n  const getFirstFiveGoods = () => {\n    getGoodsFromServer(get5First);\n  };\n\n  const getRedGoods = () => {\n    getGoodsFromServer(getRed);\n  };\n\n  return (\n    <div className=\"App container box\">\n      <h1 className=\"title has-text-centered\">Dynamic list of Goods</h1>\n\n      <Buttons\n        getAllGoods={getAllGoods}\n        getFirstFiveGoods={getFirstFiveGoods}\n        getRedGoods={getRedGoods}\n        isLoading={isLoading}\n      />\n\n      {goods.length > 0 && (\n        <GoodsList goods={goods} />\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}